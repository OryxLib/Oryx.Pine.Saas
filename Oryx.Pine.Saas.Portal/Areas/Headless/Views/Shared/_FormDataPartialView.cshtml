@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using Oryx.Saas.Framework.Model
@using Oryx.Utilities.ObjectTool
@{
    var modelType = ViewData["ModelType"] as List<ModelInfo>;
    var modelData = ViewData["ModelData"] as ModelData;

    object getValue(ModelInfo modelInfo)
    {
        var qureyKey = modelInfo.PropName.ToLower();
        var queryValue = Context.Request.Query[qureyKey];

        object resultValue = null;

        if (modelData != null)
            resultValue = modelData[modelInfo.PropName];


        if (resultValue == null || string.IsNullOrEmpty(resultValue?.ToString()))
        {
            return queryValue;
        }

        return resultValue;
    }
}
<style>
    .layui-input-block {
        margin-left: 170px;
    }

    .layui-form-label {
        width: 120px;
    }
</style>
<form class="layui-form">
    @foreach (var prop in modelType)
    {
        switch (prop.ControlType)
        {
            case ControlType.DynamicGroup:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <div>
                            <button type="button" onclick="openSubPage('/Admin/@prop.TypeName/?nowrap=true')" class="layui-btn layui-btn-normal">
                                +
                            </button>
                        </div>
                    </div>
                </div>
                break;
            case ControlType.DynamicGroup_Backup:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <div class="dynamic-group-container">
                            <div class="layui-form-item">
                                @foreach (var subProp in prop.SubModelInfoList)
                                {
                                    var submodelData = modelData?[prop.PropName];
                                    if (submodelData != null)
                                    {
                                        @foreach (var subPropItem in getValue(prop) as List<ModelData>)
                                        {
                                            <div class="layui-form-item">
                                                @foreach (var subPropItem_item in subPropItem)
                                                {
                                                    <div class="layui-inline">
                                                        <label class="layui-form-label">@(subPropItem_item.Key)</label>
                                                        <div class="layui-input-block">
                                                            <input type="text" name="date" id="date1" autocomplete="off" class="layui-input"
                                                                   value="@subPropItem_item.Value">
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="layui-inline">
                                            <label class="layui-form-label">@(subProp.Name == null ? subProp.PropName : subProp.Name)</label>
                                            <div class="layui-input-block">
                                                <input type="text" name="input" id="date1" autocomplete="off" class="layui-input"
                                                       value="@getValue(prop)">
                                            </div>
                                        </div>
                                    }

                                }
                            </div>
                        </div>
                        <div>
                            <button class="layui-btn layui-btn-normal  ">
                                +
                            </button>
                        </div>
                    </div>
                </div>
                break;
            case ControlType.FileList:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <div class="layui-upload">
                            <button type="button" class="layui-btn layui-btn-normal" id="fileList">选择多文件</button>
                            <div class="layui-upload-list">
                                <table class="layui-table">
                                    <thead>
                                        <tr>
                                            <th>文件名</th>
                                            <th>大小</th>
                                            <th>状态</th>
                                            <th>操作</th>
                                        </tr>
                                    </thead>
                                    <tbody id="fileTable"></tbody>
                                </table>
                            </div>
                            <button type="button" class="layui-btn" id="fileListAction">开始上传</button>
                        </div>
                    </div>
                </div>
                break;
            case ControlType.File:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <div class="layui-upload">
                            <button type="button" class="layui-btn" id="btnFileUpload">上传文件</button>
                            <div class="layui-upload-list">
                                @*<img class="layui-upload-img" id="imgUploader">*@
                                <input type="hidden" id="fileInput" name="@prop.PropName" value="@getValue(prop)" />
                                <p id="demoText2"></p>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case ControlType.Img:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <div class="layui-upload">
                            <button type="button" class="layui-btn" id="btnImgUpload">上传图片</button>
                            <div class="layui-upload-list">
                                <img class="layui-upload-img" src="@getValue(prop)" id="imgUploader" style="width:200px;">
                                <input type="hidden" name="@prop.PropName" value="@getValue(prop)" />
                                <p id="demoText"></p>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case ControlType.Hidden:
                <input type="hidden" name="@prop.PropName" value="@getValue(prop)" />
                break;
            case ControlType.TextArea_Editor:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <textarea name="@prop.PropName">
                            @getValue(prop)
                        </textarea>
                    </div>
                </div>
                break;
            case ControlType.TextArea:
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <script id="container" name="content" type="text/plain">
                        </script>
                        <script>

                            window.textArea = '@getValue(prop)';
                        </script>
                        <input type="hidden" name="@prop.PropName" value="@getValue(prop)" />
                    </div>
                </div>
                break;
            case ControlType.Radio:
                <div class="layui-form-item">
                    <label class="layui-form-label"> @(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        @foreach (var item in prop.DataSource)
                        {
                            <input type="radio" name="@prop.PropName" value="@item.Value" @(modelData.IsNotNull(() => { return getValue(prop).ToString() == item.Value ? "checked" : ""; })) title="@item.Key">
                        }
                    </div>
                </div>
                break;
            case ControlType.List:
                <div class="layui-form-item">
                    <label class="layui-form-label"> @(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <select name="@prop.PropName" lay-filter="@prop.PropName" value="@getValue(prop)">
                            <option value=""></option>
                            @foreach (var item in prop.DataSource)
                            {
                                //因为Key 是Id, Value是显示的字段
                                <option value="@item.Key" @modelData.IsNotNull(() => { return getValue(prop).ToString() == item.Key ? "checked" : ""; })>@item.Value</option>
                            }
                        </select>
                    </div>
                </div>
                break;
            case ControlType.Date:
                <div class="layui-inline">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-inline">
                        <input type="text" name="date" id="@prop.PropName" @(prop.Required ? "required" : "") lay-verify="date" placeholder="yyyy-MM-dd" autocomplete="true" class="layui-input" value="@getValue(prop)">

                    </div>
                </div>
                break;
            case ControlType.Phone:
                <div class="layui-inline">
                    <div class="layui-inline">
                        <label class="layui-form-label">验证手机</label>
                        <div class="layui-input-inline">
                            <input type="tel" name="phone" lay-verify="required|phone" @(prop.Required ? "required" : "") autocomplete="true" class="layui-input" value="@getValue(prop)">
                        </div>
                    </div>
                </div>
                break;
            case ControlType.Email:
                <div class="layui-inline">
                    <div class="layui-inline">
                        <label class="layui-form-label">验证邮箱</label>
                        <div class="layui-input-inline">
                            <input type="text" name="email" lay-verify="email" @(prop.Required ? "required" : "") autocomplete="true" class="layui-input" value="@getValue(prop)">
                        </div>
                    </div>
                </div>
                break;
            case ControlType.Number:
                <div class="layui-form-item">
                    <label class="layui-form-label">@(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <input type="number" name="@prop.PropName" lay-verify="@prop.PropName" @(prop.Required ? "required" : "") autocomplete="true" placeholder="" class="layui-input" value="@getValue(prop)">
                    </div>
                </div>
                break;
            case ControlType.Label:
                <div class="layui-form-item">
                    <label class="layui-form-label"> @(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <span>@getValue(prop)</span>
                        <input type="hidden" name="@prop.PropName" lay-verify="@prop.PropName" @(prop.Required ? "required" : "") autocomplete="true" placeholder="" class="layui-input" value="@getValue(prop)">
                    </div>
                </div>
                break;
            case ControlType.Input:
            default:
                <div class="layui-form-item">
                    <label class="layui-form-label"> @(prop.Name == null ? prop.PropName : prop.Name)</label>
                    <div class="layui-input-block">
                        <input type="text" name="@prop.PropName" lay-verify="@prop.PropName" @(prop.Required ? "required" : "") autocomplete="true" placeholder="" class="layui-input" value="@getValue(prop)">
                    </div>
                </div>
                break;
        }
    }
    <div class="layui-form-item">
        <div class="layui-input-block">
            <button type="submit" class="layui-btn" lay-submit="" lay-filter="mainForm">立即提交</button>
            <button type="button" onclick="window.location.href = document.referrer;" class="layui-btn layui-btn-normal">返回</button>
            <button type="reset" class="layui-btn layui-btn-primary">重置</button>
        </div>
    </div>

</form>

